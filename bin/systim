#!bin/bash
# A short description of the script goes here.
#
# Usage:
#  - <command> [OPTION] [ARG]
#
#   ____  ____  ____  ____
#  ||i  |||o  |||d  |||s  |
#  ||___|||___|||___|||___|
#  |/___\|/___\|/_ _\|/___\
#
# Version 00.1.2 [2022-10-31]
# Based on the Google Style Guide: https://google.github.io/styleguide/shell.xml

if ! (return 0 2> /dev/null); then
  # now these will only get enabled if not sourced
  set -o errexit  # exit on most errors (get description)
  set -o nounset  # exit on expansion of unset variables (get description)
  set -o pipefail # use last non-zero exit code in a pipeline (get description)
fi

# ensures the trap handler is inherited or it wont work as expected
set -o errtrace

function usage() {
  local script_name
  script_name="$(basename "$0")"

  cat >&2 <<-EOF

  Command: ${script_name}
  Description: Returns what process is the owner of a provided port.

  Usage:
    ${script_name} [PORT]

  Available Options:
    -h, --help              Print this help menu.
    -v|vv|vvv, --verbose    Increase the verbosity of messages.

  Help:
    Check for ports that are taken when trying to run Magento.

      whohas 8080

    Make sure you have System Preferences closed to not overwrite options.

EOF
  exit 1
}

function err() {

}

function func_one() {}

function main() {
  case "${1-}" in
    -h | --help) usage
    ;;
    *) func_one ;;
  esac
}

main "$@"

set -eo pipefail

get_bash_version() {
  echo "${BASH_VERSINFO:-0}"
}

get_bash_version

set -eu

get_distro_id() {
  distro_id="$(cat /etc/*release | grep -E '^ID=')"
  distro_id="${distro_id#ID=}"

  echo "$distro_id"
}

get_distro_id

#!/bin/sh

set -eu

get_latest_github_release() {
  curl --silent "https://api.github.com/repos/$1/releases/latest" | jq -r .tag_name
}

get_latest_github_release "$@"

#!/usr/bin/env bash

set -eo pipefail

# utility wrapping neofetch that automatically strips the prefix from it's
# output, lowercases it, and trims any trailing space
sysinfo() {
  local cmd="$1"
  local output

  output="$(neofetch --off "$cmd" 2> /dev/null)"
  output="${output##*: }"
  output="$(lowercase "$output")"
  output="$(trim "$output")"

  echo "$output"
}

sysinfo "$@"




cat /sys/class/thermal/thermal_zone0/temp








function is_on_ac() {
    local UNAME_OUT
    UNAME_OUT="$(uname -s)"
    if [[ "$UNAME_OUT" == "Darwin" ]]; then
        if [[ $(pmset -g ps | head -1) =~ "AC Power" ]]; then
            true
        else
            false
        fi
    else
        # Linux
        # https://askubuntu.com/questions/386949/how-to-check-if-the-ac-laptop-adapter-is-plugged-or-not
        local ac_adapter
        ac_adapter=$(acpi -a | cut -d' ' -f3 | cut -d- -f1)
        if [[ "$ac_adapter" = "on" ]]; then
            true
        else
            false
         fi
    fi
}
