#!bin/bash
# A short description of the script goes here.
#
# Usage:
#  - <command> [OPTION] [ARG]
#
#   ____  ____  ____  ____
#  ||i  |||o  |||d  |||s  |
#  ||___|||___|||___|||___|
#  |/___\|/___\|/_ _\|/___\
#
# Version 00.1.2 [2022-10-31]
# Based on the Google Style Guide: https://google.github.io/styleguide/shell.xml

if ! (return 0 2> /dev/null); then
  # now these will only get enabled if not sourced
  set -o errexit  # exit on most errors (get description)
  set -o nounset  # exit on expansion of unset variables (get description)
  set -o pipefail # use last non-zero exit code in a pipeline (get description)
fi

# ensures the trap handler is inherited or it wont work as expected
set -o errtrace

function usage() {
  local script_name
  script_name="$(basename "$0")"

  cat >&2 <<-EOF

  Command: ${script_name}
  Description: Returns what process is the owner of a provided port.

  Usage:
    ${script_name} [PORT]

  Available Options:
    -h, --help              Print this help menu.
    -v|vv|vvv, --verbose    Increase the verbosity of messages.

  Help:
    Check for ports that are taken when trying to run Magento.

      whohas 8080

    Make sure you have System Preferences closed to not overwrite options.

EOF
  exit 1
}

function err() {

}

function func_one() {}

function main() {
  case "${1-}" in
    -h | --help) usage
    ;;
    *) func_one ;;
  esac
}

main "$@"

# Magically retrieves a GitHub users email even though it's not publicly shown

[ "$1" = "" ] && echo "usage: $0 <GitHub username> [<repo>]" && exit 1

[ "$2" = "" ] && repo=`curl "https://api.github.com/users/$1/repos?type=owner&sort=updated" -s | sed -En 's|"name": "(.+)",|\1|p' | tr -d ' ' | head -n 1` || repo=$2

curl "https://api.github.com/repos/$1/$repo/commits" -s | sed -En 's|"(email\|name)": "(.+)",?|\2|p' | tr -s ' ' | paste - - | sort -u -k 1,1

# `paste - -`      remove every other linebreak
# `sort -u -k1,1`  only show unique lines based on first column (email)
