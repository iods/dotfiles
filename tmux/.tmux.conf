
set-option -g default-command "tmux-shell-wrapper"

# Make shift+arrows, ctrl+arrows etc work in Vim.
set -g xterm-keys on

# See if this fixes slow ESC issues.
# http://unix.stackexchange.com/questions/23138/esc-key-causes-a-small-delay-in-terminal-due-to-its-alt-behavior
set -s escape-time 0

# Start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 1

# Status bar styling and content.
set -g status-bg black
set -g status-fg white
set -g status-left '#S '

# Show keyboard layout in prompt, assuming some script writes it to that path;
# it's "/User/…" instead of "~" so VMs can read from their symlinked OS X host home directory.
set -g status-right '#(cat /Users/$USER/.keyboard_layout 2> /dev/null) | #22T | %H:%M %d-%b-%y'
set -g status-right-length 60
set -g status-interval 2

# Highlight the active window in the status bar.
set-window-option -g window-status-current-style bg=yellow,fg=black

# Don't prompt to kill panes/windows.
bind-key x kill-pane
bind-key & kill-window

# Cycle panes.
bind b select-pane -t :.+
bind C-b select-pane -t :.+

# More intuitive split-window mappings.
bind "'" split-window -h
bind - split-window -v

# Maximize pane, e.g. for copying.
bind-key z resize-pane -Z

# Switch pane and zoom
# https://twitter.com/tskogberg/status/792025881573199872
bind C-z select-pane -t :.+ \; resize-pane -Z

# Reload tmux conf.
unbind r
bind r source-file ~/.tmux.conf\; display "Reloaded conf."

# http://robots.thoughtbot.com/tmux-copy-paste-on-os-x-a-better-future

# Use vim keybindings in copy mode
setw -g mode-keys vi

# Unbork my iTerm ctrl+1 etc mappings in tmux 2.1
# https://github.com/tmux/tmux/issues/159
set -g assume-paste-time 0

set -g history-limit 9999

# Settings ========================================================================================

# fix for vim background colors
set -g default-terminal 'screen-256color'
set -ga terminal-overrides ',screen-256color:Tc'
set-option -ga terminal-overrides ",xterm-256color:Tc"

# decrease delay to increase vim responsiveness
set -sg escape-time 1

# increase repeat time for repeatable commands
set -g repeat-time 1000

# refresh status line every 5 seconds
set -g status-interval 5

# start window and pane indices at 1.
set -g base-index 1
set -g pane-base-index 1

set -g default-terminal screen-256color
set -g history-limit 10000

set -g status-keys vi
setw -g mode-keys vi
setw -g monitor-activity on

# prevent unwanted exit with Ctrl-d
set-environment -g 'IGNOREEOF' 2

# automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on

set-window-option -g clock-mode-style 24

# refresh status line every 5 seconds
set -g status-interval 5

# length of tmux status line
set -g status-left-length 30
set -g status-right-length 150


# Theme ===========================================================================================

# make active pane border blue
set -g pane-border-fg colour7
set -g pane-active-border-fg colour7

# set the background color
set -g status-bg colour7
set -g status-fg colour0
set -g window-status-current-bg colour250
set -g window-status-current-fg colour0

# remove space between window titles
set -g window-status-separator ''

# set the left and right status
set -g status-left '#{?client_prefix,#[bg=colour2],#[bg=colour7]}#[fg=colour0] #S #[bg=colour7]#{?client_prefix,#[fg=colour2],#[fg=colour0]}'
set -g status-right '#[bg=colour7]#[fg=colour0]#{?window_zoomed_flag, #[bg=colour250]#[fg=colour0] ❐ #[bg=colour7]#[fg=colour0],} %b %d %H:%M '

# customize how windows are displayed in the status line
set -g window-status-current-format " #I:#W "
set -g window-status-format " #I:#W "


# Bindings ========================================================================================

# set the prefix to `ctrl+a` instead of `ctrl+b`
unbind C-b
set-option -g prefix C-a
bind-key C-a send-prefix

# use | and - to split a window vertically and horizontally instead of " and % respoectively
bind | split-window -h -c "#{pane_current_path}"
bind - split-window -v -c "#{pane_current_path}"
unbind '"'
unbind %

# use r to quickly reload tmux settings
unbind r
bind r source-file ~/.tmux.conf \; display 'Reloaded tmux config'

# toggle synchronized input to all panes in current window
bind-key S set-window-option synchronize-panes

# move around panes with hjkl, as one would in vim after pressing ctrl + w
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# resize panes with HJKL
bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

# use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

---===========================
# remap prefix to Control + a, like screen
# and also to Control + s, for conflicts
set -g prefix C-a
unbind C-b
bind C-a send-prefix
bind C-s send-prefix

bind -n C-k clear-history

# force a reload of the config file
unbind r
bind r source-file ~/.tmux.conf \; display-message "Config reloaded..."

# act like vim
bind -r k resize-pane -U 5
bind -r h resize-pane -L 5
bind -r j resize-pane -D 5
bind -r l resize-pane -R 5

setw -g mode-keys vi
set -g status-keys emacs

set -g default-shell $SHELL

# Setup 'v' to begin selection as in Vim
bind -T copy-mode-vi 'v' send -X begin-selection
# Jump back to the prompt after yanking
bind -T copy-mode-vi 'y' send -X copy-selection-and-cancel

# Update default binding of `Enter` to also use copy-pipe
unbind -T copy-mode-vi Enter
bind -T copy-mode-vi Escape send -X cancel
bind -T copy-mode-vi "y" send -X copy-pipe-and-cancel "pbcopy"

# mouse things
set -g mouse on

# Split vertically using pipe, horizontally using dash
bind | split-window -h
bind - split-window -v

# control-k clears scrollback
bind -n C-k clear-history

# Smart pane switching with awareness of vim splits
# See: https://github.com/christoomey/vim-tmux-navigator
# is_vim='echo "#{pane_current_command}" | grep -iqE "(^|\/)g?(view|n?vim?x?)(diff)?$"'
# bind -n C-h if-shell "$is_vim" "send-keys C-h" "select-pane -L"
# bind -n C-j if-shell "$is_vim" "send-keys C-j" "select-pane -D"
# bind -n C-k if-shell "$is_vim" "send-keys C-k" "select-pane -U"
# bind -n C-l if-shell "$is_vim" "send-keys C-l" "select-pane -R"
# bind -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Start windows and panes at 1, not 0
set -g base-index 1
set -g pane-base-index 1

# renumber windows sequentially after closing any of them
set -g renumber-windows on

set -g history-limit 10000

# look better
set -g default-terminal "xterm-256color"
set -ga terminal-overrides ",xterm-256color:Tc"

# Titles (window number, program name, active (or not)
set -g set-titles on
set -g set-titles-string '#S.#I.#P #W'

# New windows/pane in $PWD
bind c new-window -c "#{pane_current_path}"
bind c new-window -c "#{pane_current_path}"

# open splits vi style
bind v split-window -h -c "#{pane_current_path}"
bind s split-window -v -c "#{pane_current_path}"

# other craziness
set -g pane-active-border-style fg=colour50

set -g status-fg colour137
set -g status-bg colour237

setw -g window-status-current-format '#[fg=colour81,bg=colour238] #I#[fg=colour250] #[fg=colour255]#W#[fg=colour81]#F '

# molokai
# setw -g window-status-bg colour23k
# seoul256
setw -g window-status-format '#[fg=colour138,bg=colour237] #I #[fg=colour250]#W#[fg=colour244]#F '

set -g status-interval 5
set -g status-justify left
set -g status-left ''
set -g status-right '#[fg=colour215]#S #[fg=colour249,bg=colour240] %m/%d #[fg=colour240,bg=colour249] %H:%M '
set -g status-right-length 50
set -g status-left-length 20

set -g visual-activity on

# Local config
if-shell "[ -f ~/.tmux.conf.local ]" 'source ~/.tmux.conf.local'

set -g default-terminal "screen-256color"
# change prefix command to C-z
set -g prefix C-z
unbind C-b
bind C-z last-window
bind z send-prefix

# Turn on mouse support
setw -g mouse on

# Allow xterm titles in terminal window, terminal scrolling with scrollbar, and setting overrides of C-Up, C-Down, C-Left, C-Right
set -g terminal-overrides "xterm*:XT:smcup@:rmcup@:kUP5=\eOA:kDN5=\eOB:kLFT5=\eOD:kRIT5=\eOC"

# Scroll History
set -g history-limit 30000

# Set ability to capture on start and restore on exit window data when running an application
setw -g alternate-screen on

# Lower escape timing from 500ms to 50ms for quicker response to scroll-buffer access.
set -s escape-time 50

# setup | and - for window splitting
unbind %
bind | split-window -h
bind - split-window -v

# colors
set -g default-terminal "screen-256color"

# title
set -g set-titles on
set -g set-titles-string '#T'
#set -g status-justify centre

# start window numbering at 1 for easier switching
set -g base-index 1
setw -g pane-base-index 1

# start numbering at 1
set -g base-index 1

# default statusbar colors
set-option -g status-bg colour0
set-option -g status-fg colour7
set-option -g status-attr default

# default window title colors
set-window-option -g window-status-fg colour6
set-window-option -g window-status-bg default
#set-window-option -g window-status-attr dim
set-window-option -g automatic-rename on

# active window title colors
setw -g window-status-current-format "|#I:#W|"
set-window-option -g window-status-current-fg colour4
set-window-option -g window-status-current-bg default
#set-window-option -g window-status-current-attr bright

# pane border
set-option -g pane-border-fg colour235 #base02
set-option -g pane-active-border-fg colour240 #base01

#
# dotphiles : https://github.com/dotphiles/dotphiles
#
# Setup tmux
#
# Authors:
#   Ben O'Hara <bohara@gmail.com>
#

# Make clipboard work inside vim (OSX)
if-shell 'test "$(uname)" = "Darwin"' 'set-option -g default-command "reattach-to-user-namespace -l $SHELL"'

# Clipboard (OSX)
if-shell 'test "$(uname)" = "Darwin"' 'bind C-c run "tmux save-buffer - | reattach-to-user-namespace pbcopy"'
if-shell 'test "$(uname)" = "Darwin"' 'bind C-v run "reattach-to-user-namespace pbpaste | tmux load-buffer - && tmux paste-buffer"'

# 0 is too far from ` ;)
set-option -g base-index 1
set-window-option -g pane-base-index 1

set-option -g default-command $SHELL
set-option -g default-shell $SHELL

set-option -g prefix C-a
bind-key C-a last-window
bind-key a send-prefix

# Automatically set window title
set-window-option -g automatic-rename on
set-option -g set-titles on
set-option -g set-titles-string '[#S:#I #h] #W'

set -g default-terminal "screen-256color"
set -g terminal-overrides 'xterm:colors=256'
set -g status-keys vi
set -g history-limit 10000

setw -g mode-keys vi

set -g utf8
set-window-option -g utf8 on

# disable mouse control by default - change 'off' to 'on' to enable by default.
setw -g mode-mouse on
setw -g mouse-utf8 on
if-shell 'test "`tmux -V`" != "tmux 1.4"' 'set-option -g mouse-resize-pane on'
set-option -g mouse-select-pane on
if-shell 'test "`tmux -V`" != "tmux 1.4"' 'set-option -g mouse-select-window on'

# toggle mouse mode to allow mouse copy/paste
# set mouse on with prefix m
bind m \
    set -g mode-mouse on \;\
    if-shell 'test "`tmux -V`" != "tmux 1.4"' 'set-option -g mouse-resize-pane on' \;\
    set -g mouse-select-pane on \;\
    if-shell 'test "`tmux -V`" != "tmux 1.4"' 'set-option -g mouse-select-window on' \;\
    display 'Mouse: ON'
# set mouse off with prefix M
bind M \
    set -g mode-mouse off \;\
    if-shell 'test "`tmux -V`" != "tmux 1.4"' 'set-option -g mouse-resize-pane off' \;\
    set -g mouse-select-pane off \;\
    if-shell 'test "`tmux -V`" != "tmux 1.4"' 'set-option -g mouse-select-window off' \;\
    display 'Mouse: OFF'

#bind-key Space choose-session

bind-key | split-window -h
bind-key - split-window -v

bind-key J resize-pane -D 5
bind-key K resize-pane -U 5
bind-key H resize-pane -L 5
bind-key L resize-pane -R 5

bind-key M-j resize-pane -D
bind-key M-k resize-pane -U
bind-key M-h resize-pane -L
bind-key M-l resize-pane -R

# Rather than constraining window size to the maximum size of any client
# connected to the *session*, constrain window size to the maximum size of any
# client connected to *that window*. Much more reasonable.
setw -g aggressive-resize on

# Vim style pane selection
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R

# Use Alt-vim keys without prefix key to switch panes
bind -n M-h select-pane -L
bind -n M-j select-pane -D
bind -n M-k select-pane -U
bind -n M-l select-pane -R

# Use Alt-arrow keys without prefix key to switch panes
bind -n M-Left select-pane -L
bind -n M-Right select-pane -R
bind -n M-Up select-pane -U
bind -n M-Down select-pane -D

# Shift arrow to switch windows
bind -n S-Left  previous-window
bind -n S-Right next-window

# easily toggle synchronization (mnemonic: e is for echo)
bind e setw synchronize-panes

# No delay for escape key press
set -sg escape-time 0

# Reload tmux config
bind r source-file ~/.tmux.conf \; display-message 'Reloaded ~/.tmux.conf!'

# Set window notifications
setw -g monitor-activity on
set -g visual-activity off

set -g status-bg 'colour10'
set -g message-command-fg 'colour11'
set -g status-justify 'left'
set -g status-left-length '100'
set -g status 'on'
set -g pane-border-fg 'colour8'
set -g pane-active-border-fg 'colour7'
set -g message-bg 'colour7'
set -g status-right-length '100'
set -g status-right-attr 'none'
set -g message-fg 'colour11'
set -g message-command-bg 'colour7'
set -g status-attr 'none'
set -g status-utf8 'on'
set -g status-left-attr 'none'
setw -g window-status-fg 'colour7'
setw -g window-status-attr 'none'
setw -g window-status-activity-bg 'colour10'
setw -g window-status-activity-attr 'none'
setw -g window-status-activity-fg 'colour4'
setw -g window-status-separator ''
setw -g window-status-bg 'colour10'
set -g status-left '#[fg=colour0,bg=colour4,bold] #S #[fg=colour4,bg=colour10,nobold,nounderscore,noitalics]'
set -g status-right '#[fg=colour7,bg=colour10,nobold,nounderscore,noitalics]#[fg=colour11,bg=colour7] %Y-%m-%d  %H:%M #[fg=colour4,bg=colour7,nobold,nounderscore,noitalics]#[fg=colour0,bg=colour4] #h '
setw -g window-status-format '#[fg=colour7,bg=colour10] #I#F #[fg=colour7,bg=colour10] #W'
setw -g window-status-current-format '#[fg=colour10,bg=colour7,nobold,nounderscore,noitalics]#[fg=colour11,bg=colour7] #I#F #[fg=colour11,bg=colour7] #W #[fg=colour7,bg=colour10,nobold,nounderscore,noitalics]'

#                   _                                          __
#                  | |_ _ __ ___  _   ___  __  ___ ___  _ __  / _|
#                  | __| '_ ` _ \| | | \ \/ / / __/ _ \| '_ \| |_
#                  | |_| | | | | | |_| |>  < | (_| (_) | | | |  _|
#                 (_)__|_| |_| |_|\__,_/_/\_(_)___\___/|_| |_|_|
#
#
# Author: Serhat Teker <serhat.teker@gmail.com>
# Source: https://github.com/SerhatTeker/dotfiles
#
#-------------------------------------------------------#
# SETTINGS	{{{1
#-------------------------------------------------------#
# Status update interval
set -g status-interval 1

# Default shell/path {{{2

# default-shell path
# set -g default-shell ${SHELL}

# default-command shell-command
# instead of using login shell -by default, use non-login shell
# set -g default-command zsh
# }}}2

# Colors {{{2

# Ensure terminal starts with its own colour scheme (helps Vim/Neovim themes to not break)

# https://github.com/lifepillar/vim-solarized8/issues/4#issuecomment-985416964
# Default terminal is 256 colors
set -g default-terminal "screen-256color"
# Alternative
# set -g default-terminal "tmux-256color"
# Add truecolor support
set -ga terminal-overrides ",xterm-256color:Tc"

# https://github.com/tmux/tmux/wiki/FAQ#how-do-i-use-rgb-colour
set -as terminal-features ",gnome*:RGB"

# # set -g default-terminal "screen-256color" # no S-Fx keys ;-(
# # and ensure the key-codes are xterm alike
# set -g xterm-keys on

# Custom colors {{{

# **Disabled** since setting colors from **tmuxline.vim**
# Getting colors from tmux-themepack
# if-shell "test -e ~/.config/tmux/colors/dark.conf" "source-file ~/.config/tmux/colors/dark.conf"
# }}}

# Active-Inactive {{{

# **Now controlled from Nvim**

# set inactive/active window styles
# window-active-style default color #1325
# https://github.com/tmux/tmux/issues/1325
#
# default - works with onedark/neodark
# set -g window-style 'fg=colour247,bg=colour236'
# set -g window-active-style 'fg=colour252,bg=colour234'
# alternative
# set -g window-style 'fg=colour247,bg=colour236'
# set -g window-active-style 'fg=colour255,bg=colour234'
# }}}
# }}}

# Window separator
set -g window-status-separator ""

# Window status alignment
set -g status-justify centre

# vi is good
setw -g mode-keys vi

# mouse behavior
set -g mouse on
# set -g mouse-select-pane on
# set -g mouse-resize-pane on

# reorder windows
# auto renumber
set-option -g renumber-windows on

# order sessions
bind s choose-tree -GswZ -O index

# vim <esc> time delay disable
set -sg escape-time 0

#-------------------------------------------------------#
# }}}1
#-------------------------------------------------------#

#-------------------------------------------------------#
#      MAPPINGS {{{1
#-------------------------------------------------------#

# Prefix. Use <C-a> instead of <C-b>
unbind C-b
set -g prefix C-a

# reload tmux config {{{

bind C-r source-file ~/.config/tmux/tmux.conf \; display-message "Tmux config file reloaded."
# tmux version < 3.1
# bind C-r source-file ~/.tmux.conf \; display-message "Tmux config file reloaded."
# }}}

# split windows {{{2

# duplicate current path
# horizontally
bind | split-window -h -c "#{pane_current_path}"
# vertically
bind - split-window -v -c "#{pane_current_path}"
# new window
bind c new-window  -c "#{pane_current_path}"

# defaults
# # Split panes horizontal
# bind | split-window -h
# # Split panes vertically
# bind - split-window -v
# }}}2

# floating windows {{{

# Open default floating window on $pwd
bind C-w display-popup
# -E closes the popup automatically when shell-command exits.
# Two -E closes the popup only if shell-command exited with
# success.
# }}}

# pane layout alignment {{{2
bind V select-layout even-vertical
bind H select-layout even-horizontal
# }}}2

# reload tmux config {{{

bind C-r source-file ~/.config/tmux/tmux.conf \; display-message "Tmux config file reloaded."
# tmux version < 3.1
# bind C-r source-file ~/.tmux.conf \; display-message "Tmux config file reloaded."
# }}}

# resize pane  {{{

# Resize the selected pane using Alt + direction
bind M-h resize-pane -L 50
bind M-j resize-pane -D 20
bind M-k resize-pane -U 20
bind M-l resize-pane -R 50
# }}}

# reorder windows {{{

# manual renumber key binding
# bind o move-window -r\; display-message "Windows reordered..."
# }}}2

# navigation {{{

# Windows navigation
# Use m instead of p
bind-key C-n next-window
bind-key C-m previous-window

# Session Navigation with fzf
bind C-j display-popup -E "tmux list-sessions \
    | sed -E 's/:.*$//' \
    | grep -v \"^$(tmux display-message -p '#S')\$\" \
    | fzf --reverse | xargs tmux switch-client -t"

# Panes navigation with vim keys
bind h select-pane -L
bind j select-pane -D
bind k select-pane -U
bind l select-pane -R
# }}}

# copy paste {{{2

# start: leader + [
# select and yank: v and y
# quit: q
# paste: leader + P
bind P paste-buffer
# bind Y paste-buffer
bind-key -T copy-mode-vi v send-keys -X begin-selection
bind-key -T copy-mode-vi y send-keys -X copy-selection
bind-key -T copy-mode-vi r send-keys -X rectangle-toggle
# }}}2

# managing {{{2

bind C-Q kill-window
# }}}2

#-------------------------------------------------------#
# }}}1
#-------------------------------------------------------#

#-------------------------------------------------------#
#      PLUGINS	{{{1
#-------------------------------------------------------#

# Plugin root directory is ~/.local/share/tmux | $XDG_DATA_HOME
# If you change it update mux alias among below related lines as well

# Changing plugins install dir
# https://github.com/tmux-plugins/tpm/blob/master/docs/changing_plugins_install_dir.md
# plugin_path="$XDG_DATA_HOME/tmux/plugins"
plugin_path="~/.local/share/tmux/plugins"
set-environment -g TMUX_PLUGIN_MANAGER_PATH "$plugin_path"

# List of plugins {{{

set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'
set -g @plugin 'tmux-plugins/tmux-resurrect'
set -g @plugin 'akohlbecker/aw-watcher-tmux'
# }}}

# tmux-resurrect-1 {{{

# mappings
set -g @resurrect-restore 'E'
set -g @resurrect-save 'Y'
# neovim sessions
# set -g @resurrect-strategy-nvim 'session'

# https://github.com/tmux-plugins/tmux-resurrect/blob/master/docs/save_dir.md#resurrect-save-dir
# default ~/.tmux/resurrect
resurrect_dir="$XDG_DATA_HOME/tmux/resurrect/sessions"
set -g @resurrect-dir $resurrect_dir

set -g @resurrect-hook-post-save-all 'sed -i "s/\/tmp.*nvim/nvim/" $resurrect_dir/last'
# }}}

# tmux-vim-navigator {{{

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?l?vim?x?)(diff)?$'"

bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n 'C-\' if-shell "$is_vim" "send-keys 'C-\\'" "select-pane -l"
bind-key -T copy-mode-vi C-h select-pane -L
bind-key -T copy-mode-vi C-j select-pane -D
bind-key -T copy-mode-vi C-k select-pane -U
bind-key -T copy-mode-vi C-l select-pane -R
bind-key -T copy-mode-vi 'C-\' select-pane -l

# Restoring Clear Screen (C-l)
# Enabled you can use <prefix> C-l to clear the screen
bind C-l send-keys 'C-l'
# }}}

# Automatic tpm installation
# https://github.com/tmux-plugins/tpm/blob/master/docs/automatic_tpm_installation.md
tpm_dir="$plugin_path/tpm"
if "test ! -d $tpm_dir" \
    "run 'git clone https://github.com/tmux-plugins/tpm $tpm_dir && $tpm_dir/bin/install_plugins'"

# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b "$tpm_dir/tpm"

# tmux-resurrect-2 {{{

# restart tmux-resurrect after reboot
# using alias `mux` instead of this, since it creates additional session
# run -b '~/.tmux/plugins/tmux-resurrect/scripts/restore.sh r'
# }}}
#-------------------------------------------------------#
# }}}1
#-------------------------------------------------------#


# List of plugins
set -g @plugin 'tmux-plugins/tpm'
set -g @plugin 'tmux-plugins/tmux-sensible'

# set -g @plugin 'jimeh/tmux-themepack'

set -g default-terminal "screen-256color"

# Automatically set window title and don't let it change
set-option -g set-titles on
set-option -g allow-rename off

# Use c-a as prefix
set -g prefix C-a
unbind C-b
bind C-a send-prefix
bind-key a send-key C-a

## Start numbering at 1
set -g base-index 1
setw -g pane-base-index 1
bind  *  choose-session  # choose session interactively

bind | split-window -h
bind - split-window -v

# set -g @themepack 'powerline/default/blue'
source-file "${HOME}/.dotfiles/themes/blue.tmuxtheme"

if "test ! -d ~/.tmux/plugins/tpm" \
   "run 'git clone https://github.com/tmux-plugins/tpm ~/.tmux/plugins/tpm && ~/.tmux/plugins/tpm/bin/install_plugins'"
# Initialize TMUX plugin manager (keep this line at the very bottom of tmux.conf)
run -b '~/.tmux/plugins/tpm/tpm'


